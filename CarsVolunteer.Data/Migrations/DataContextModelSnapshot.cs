// <auto-generated />
using System;
using CarsVolunteer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarsVolunteer.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("שב_4.Controllers.properties.Application", b =>
                {
                    b.Property<int>("appId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("appId"), 1L, 1);

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("custID")
                        .HasColumnType("int");

                    b.Property<int>("customercastId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("volId")
                        .HasColumnType("int");

                    b.HasKey("appId");

                    b.HasIndex("customercastId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("שב_4.Controllers.properties.Customer", b =>
                {
                    b.Property<int>("castId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("castId"), 1L, 1);

                    b.Property<string>("castAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("castEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("castName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("castPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("castId");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("שב_4.Controllers.properties.Volunteer", b =>
                {
                    b.Property<int>("volId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("volId"), 1L, 1);

                    b.Property<int>("carNum")
                        .HasColumnType("int");

                    b.Property<string>("volDomain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("volName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("volPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("volStatus")
                        .HasColumnType("bit");

                    b.HasKey("volId");

                    b.ToTable("volunteers");
                });

            modelBuilder.Entity("שב_4.Controllers.properties.Application", b =>
                {
                    b.HasOne("שב_4.Controllers.properties.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("customercastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });
#pragma warning restore 612, 618
        }
    }
}
